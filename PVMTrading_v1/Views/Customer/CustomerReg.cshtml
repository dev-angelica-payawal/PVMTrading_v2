@model PVMTrading_v1.ViewModels.CustomerViewModel

@{
    ViewBag.Title = "Customer Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("SaveReg", "Customer"))
{
    @Html.AntiForgeryToken()

    <div class="content-wrapper">
        <div class="container-fluid">
            <div class="card mb-3">

                <div class="card mb-3">
                    <div class="card-header">
                        <h4>Customer Registration</h4>
                    </div>

                    <div class="card-body">
                        <div class="table-responsive"></div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Customer.FirstName, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Customer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Customer.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Customer.MiddleName, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Customer.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Customer.MiddleName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Customer.LastName, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Customer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Customer.LastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Customer.NameExtension, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Customer.NameExtension, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Customer.NameExtension, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                               
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Customer.Mobile, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Customer.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Customer.Mobile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Customer.Sexid, "Sexid", htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-6">
                                            @Html.DropDownListFor(m => m.Customer.Sexid, new SelectList(Model.Sexs, "Id", "Label"), "Sex", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Customer.Sexid, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CustomerCompleInfo.LotHouseNumberAndStreet, new { @class = "control-label col-md-6" })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.CustomerCompleInfo.LotHouseNumberAndStreet, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CustomerCompleInfo.LotHouseNumberAndStreet, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerCompleInfo.Barangay, new { @class = "control-label col-md-6" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.CustomerCompleInfo.Barangay, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CustomerCompleInfo.Barangay, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerCompleInfo.CityMunicipality, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.CustomerCompleInfo.CityMunicipality, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CustomerCompleInfo.CityMunicipality, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerCompleInfo.Province, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.CustomerCompleInfo.Province, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CustomerCompleInfo.Province, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                @Html.HiddenFor(m => m.Customer.Id)
                                <button type="submit" value="Save" class="btn btn-success">Save changes</button>
                                </div>
                            </div>
                        </div>
                    </div>

                   
                   

                       


                   
                </div>

            </div>
        </div>
    




}









@section scripts
  {
    @Scripts.Render("~/bundles/jqueryval")
}
