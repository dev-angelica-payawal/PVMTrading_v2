@model PVMTrading_v1.Models.LoanDuePayment

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Update</h2>
<script src="~/Content/jquery.min.js"></script>
@using (Html.BeginForm("SaveUpdateLoan","Loan"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>LoanDuePayment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        <div class="form-group">
            @Html.LabelFor(model => model.DueDateTime,  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDateTime, new { @class = "form-control" ,@readonly=true  })
                @Html.ValidationMessageFor(model => model.DueDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPaid, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPaid,new {Value=true})
                    @Html.ValidationMessageFor(model => model.IsPaid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PenaltyAmount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PenaltyAmount, new {id="penalty", @class = "txt form-control", @readonly = true })
                @Html.ValidationMessageFor(model => model.PenaltyAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalAmountDue, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.TotalAmountDue,  new {id="amountDue", @class = "txt form-control"  })
                @Html.ValidationMessageFor(model => model.TotalAmountDue, "", new { @class = "text-danger" })
                <input type="text" id="amount" style="display: none;" Value=@Model.TotalAmountDue/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OR, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OR, new { @class = "txt form-control"  })
                @Html.ValidationMessageFor(model => model.OR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



<script>



        $(document).ready(function () {

            $(".txt").each(function () {

                $(this).keyup(function () {
                   
                    StringCompare();


                });
            });

        });
   
    //if discount if greater than orig amount
    function StringCompare() {
        var penalty = document.getElementById("penalty").value;
      
        var loanamount = 0;

        var amount = document.getElementById("amount").value;
      
       
        loanamount = +amount + +penalty;
            document.getElementById("amountDue").value = loanamount;
      

    }
    


</script>
