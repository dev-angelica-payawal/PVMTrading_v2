@using System.Diagnostics
@using System.Web.UI.WebControls
@using Foolproof
@model PVMTrading_v1.ViewModels.CashTransactionViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Index</h2>
<script src="~/Content/jquery.min.js"></script>
@using (Html.BeginForm("Save", "CashTransaction"))
{
    @Html.AntiForgeryToken()
    <div class="content-wrapper">
        <div class="container-fluid">
            <div class="card mb-3">

                <div class="card mb-3">
                    <div class="card-header">
                        <h4>Cash Transaction Summary</h4>
                    </div>
                    <div class="form-horizontal">



                        <p>
                            @{ Html.RenderAction("CashTransactionItemListSummary", "CashTransaction"); }
                        </p>

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.CashTransaction.CashTransactionDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.CashTransaction.CashTransactionDate, new { @class = "col-2 form-control", id = "transactDate", Value = DateTime.Now, @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.CashTransaction.CashTransactionDate, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Customer.FirstName, "Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-10">

                                @Html.TextBoxFor(m => m.Customer.FirstName, new { @class = "col-2 form-control", @readonly = "true" }) @Html.TextBoxFor(m => m.Customer.LastName, new { @class = "col-2 form-control", @readonly = "true" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.CashTransaction.TotalDiscountedAmount, "Discount", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.CashTransaction.TotalDiscountedAmount, new { type = "integer", Value = "", id = "TotalDiscount", @class = "col-2 form-control txt" })
                                @Html.ValidationMessageFor(model => model.CashTransaction.TotalDiscountedAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CashTransaction.OriginalTotalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.CashTransaction.OriginalTotalAmount, new { id = "OrigAmount", @class = "col-2 form-control txt", @readonly = "true" })
                                @Html.ValidationMessageFor(model => model.CashTransaction.OriginalTotalAmount, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CashTransaction.TotalAmount, htmlAttributes: new { @class = "control-label col-md-2" }) <span style="border: lightgray solid 1px; padding: .4em 7em .4em 7em; border-radius: .3em; background:#E9ECEF " id="sum">0</span>

                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.CashTransaction.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.CashTransaction.Remarks, new { id = "Remarks", @class = "col-lg-2 form-control " })
                                @Html.ValidationMessageFor(model => model.CashTransaction.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CashTransaction.OR, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.CashTransaction.OR, new { Value = "", id = "Or", @class = "col-lg-2 form-control" })
                                @Html.ValidationMessageFor(model => model.CashTransaction.OR, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.HiddenFor(c => c.CashTransaction.Id, new { id = "Id" })
                        @Html.HiddenFor(c => c.CashTransaction.CustomerId, new { id = "CustomerId" })
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save Transaction" @*onclick="getTotal();"*@ class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

                                }
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@*<link href="~/Content/PVMcssandjs/jquery-ui-1.12.1/jquery-ui.css" rel="stylesheet" />
    <script src="~/Content/PVMcssandjs/jquery-ui-1.12.1/jquery-ui.js"></script><script type="text/javascript">
        $(function () {

            $("#SearchString").autocomplete({
                source: @Html.ActionLink("autocomplete","AutocompleteSuggestions","CashTransaction"),
                minLength: 1,
                select: function (event, ui) {
                    if (ui.item) {
                        $("#SearchString").val(ui.item.value);
                        $("form").submit();
                    }
                }
            });
        });
    </script>*@
<script>


    $(document).ready(function () {

        $(".txt").each(function () {

            $(this).keyup(function () {
                calculateSum();
                StringCompare();


            });
        });

    });

    //if discount if greater than orig amount
    function StringCompare() {
        var discount = document.getElementById("TotalDiscount").value;
        var orig = document.getElementById("OrigAmount").value;

        if (parseFloat(discount) > parseFloat(orig)) {
            document.getElementById("TotalDiscount").value = 0;
        }
        alert(document.getElementById('sum').innerHTML)
    }


    function getTotal() {

        $.ajax({
            url: '@Url.Action("Save")',
            data: {
                CustomerId: $('#CustomerId').val(),
                Id: $('#Id').val(),
                OR: $('#Or').val(),
                Remarks: $('#Remarks').val(),
                CashTransactionDate: $('#transactDate').val(),
                TotalDiscountedAmount: $('#TotalDiscount').val(),
                OriginalTotalAmount: $('#OrigAmount').val(),
                TotalAmount: document.getElementById('sum').innerHTML
            },
            type: 'POST',
            success: function () { alert(success.data); },
            error: function () {
                alert("error");
            }
        });
    }




    function calculateSum() {

        var sum = 0;
        //iterate through each textboxes and add the values
        $(".txt").each(function () {

            //add only if the value is number
            if (!isNaN(this.value) && this.value.length != 0) {
                sum = parseFloat(this.value) - sum;
            }

        });
        //.toFixed() method will roundoff the final sum to 2 decimal places
        $("#sum").html(sum.toFixed(2));
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



