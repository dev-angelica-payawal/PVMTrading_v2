
@model PVMTrading_v1.ViewModels.ProductViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Save", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="content-wrapper">
        <div class="container-fluid">
            <div class="card mb-3">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.Name, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(c => c.Product.ProductImage, new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @* @Html.TextBoxFor(model => model.Product.ProductImage, new { id = "file", type = "file", accept = "image/x-png,image/gif,image/jpeg" })
                                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })*@
                                <input type="file" id="file" name="file"/>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.SerialNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.Model, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.Model, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.IsReturned, "Returned", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Product.IsReturned)
                                    @Html.ValidationMessageFor(model => model.Product.IsReturned, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.BrandId, "Brand Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.Product.BrandId, new SelectList(Model.Brands, "Id", "BrandName"), "Brand Name", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Product.BrandId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.BranchId, "Branch Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.Product.BranchId, new SelectList(Model.Branches, "Id", "BranchName"), "Branch Name", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Product.BranchId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.ProductCategoryId, "Category", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.Product.ProductCategoryId, new SelectList(Model.ProductCategories, "Id", "Name"), "Product Category", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Product.ProductCategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.ProductConditionId, "Product Condition", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.Product.ProductConditionId, new SelectList(Model.ProductConditions, "Id", "Label"), "Product Condition", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Product.ProductConditionId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.OriginalPrice, "Original Price", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(m => m.Product.OriginalPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.OriginalPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div> Free Item</div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductInclusion.FreeItem, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProductInclusion.FreeItem, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductInclusion.FreeItem, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductInclusion.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProductInclusion.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductInclusion.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.WarrantyId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.Product.WarrantyId, new SelectList(Model.Warranties, "Id", "Label"), "Select Warranty", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Product.WarrantyId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.Reserved, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.Reserved, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.Reserved, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product.AvailableForSelling, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product.AvailableForSelling, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.AvailableForSelling, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(m => m.Product.Id)
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>

            }




            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
